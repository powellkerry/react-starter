/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.attachListeners = undefined;

var _attributeToggler = __webpack_require__(1);

var _attributeToggler2 = _interopRequireDefault(_attributeToggler);

var _makeFit = __webpack_require__(2);

var _makeFit2 = _interopRequireDefault(_makeFit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getSite() {
    var site = 'seminary',
        cls = document.querySelector('body').getAttribute('class');
    if (cls.indexOf('institute') !== -1) {
        site = 'institute';
    }
    if (cls.indexOf('church-education') !== -1) {
        site = 'church-education';
    }
    return site;
}

function attachListeners() {
    var button = document.querySelector('.site-navigation__menu_toggle'),
        menu = document.querySelector('.site-navigation__menu');

    if (button && menu) {
        var toggleMenu = (0, _attributeToggler2.default)(menu),
            mf = _makeFit2.default.init({
            elemToFit: menu,
            sizeClasses: ['site-navigation_mobile'],
            fitType: ['width']
        });

        mf.run();

        button.addEventListener('click', toggleMenu.toggle);

        document.body.addEventListener('click', function (e) {
            var target = e.target;

            if (toggleMenu.isOn() && target !== menu && target !== button && !menu.contains(target) && !button.contains(target)) {
                toggleMenu.off();
                e.preventDefault();
            }
        });
    }
}

function requestNavigation() {
    var search = window.location.search.substring(1),
        searchObj = search ? JSON.parse('{"' + search.replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) {
        return key === "" ? value : decodeURIComponent(value);
    }) : {};

    fetch('/si/navigation/' + getSite() + '?lang=' + (searchObj.lang || 'eng') + '&preview-permissions=' + (searchObj['preview-permissions'] || 'Public'), {
        method: 'GET',
        mode: 'cors',
        credentials: 'include'
    }).then(function (response) {
        response.json().then(function (data) {
            var temp = document.createElement('div');
            temp.innerHTML = data.html;

            document.querySelector('.site-navigation').innerHTML = temp.querySelector('nav').innerHTML;

            temp.remove();

            attachListeners();
        });
    });
}

function init() {
    if (document.querySelector('.site-navigation')) {
        // Get non-cached version for role based content
        if (window.Platform) {
            requestNavigation();
        } else {
            attachListeners();
        }
    }
}

exports.attachListeners = attachListeners;
exports.default = init;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (element, attr) {

	var attribute = attr || 'data-on',
	    // es6 default parameters breaks partial application

	on = function on() {
		element.setAttribute(attribute, 1);
		element.dispatchEvent(new CustomEvent('attribute-toggler.on', { bubbles: true, detail: attribute }));
		element.dispatchEvent(new CustomEvent('attribute-toggler.on.' + attribute, { bubbles: true, detail: attribute }));
		return element;
	},
	    off = function off() {
		element.removeAttribute(attribute);
		element.dispatchEvent(new CustomEvent('attribute-toggler.off', { bubbles: true, detail: attribute }));
		element.dispatchEvent(new CustomEvent('attribute-toggler.off.' + attribute, { bubbles: true, detail: attribute }));
		return element;
	},
	    isOn = function isOn() {
		return element.hasAttribute(attribute);
	},
	    toggle = function toggle() {
		return isOn() ? off() : on();
	};

	return { on: on, off: off, isOn: isOn, toggle: toggle };
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
var makeFit = {
	options: {},
	init: function init(options) {
		options = options || {};
		var mf = {};
		mf.options = {
			elemToFit: options.elemToFit,
			sizeClasses: options.sizeClasses || ['makeFit-small', 'makeFit-smaller', 'makeFit-smallest'],
			resize: options.resize || function () {
				window.addEventListener('resize', mf.run);
				window.addEventListener('orientationchange', mf.run);
			},
			fitType: options.fitType || ['height', 'width'],
			maxHeight: options.maxHeight || undefined // eslint-disable-line no-undefined
		};

		mf.options.elemToTestFit = options.elemToTestFit || mf.options.elemToFit.parentElement;
		mf.options.elemsToAddClassTo = options.elemsToAddClassTo || [mf.options.elemToTestFit];

		//we are creating small caller functions that reside with the returned object, creating a factory.
		mf.run = function () {
			makeFit.run({ mf: mf });
		};
		mf.removeClasses = function () {
			makeFit.removeClasses({
				sizeClasses: mf.options.sizeClasses,
				elemsToAddClassTo: mf.options.elemsToAddClassTo
			});
		};
		mf.testNotFit = function () {
			return makeFit.testNotFit({
				elemToTestFit: mf.options.elemToTestFit,
				elemToFit: mf.options.elemToFit,
				fitType: mf.options.fitType,
				maxHeight: mf.options.maxHeight
			});
		};
		mf.addClass = function (i) {
			makeFit.addClass({
				index: i,
				sizeClasses: mf.options.sizeClasses,
				mf: mf,
				elemsToAddClassTo: mf.options.elemsToAddClassTo
			});
		};

		if (mf.options.resize) {
			mf.options.resize();
		}

		return mf;
	},

	// these classes are written to be generic,
	// so they accept an object rather than reference a config,
	// that is what the `mf.` functions are for in the init function.
	run: function run(obj) {
		obj.mf.removeClasses();
		obj.mf.addClass(0);
	},
	removeClasses: function removeClasses(obj) {
		obj.sizeClasses.forEach(function (c) {
			obj.elemsToAddClassTo.forEach(function (elem) {
				elem.classList.remove(c);
			});
		});
	},
	testNotFit: function testNotFit(obj) {
		var itemNoLongerFits = false,
		    elemToTestFit = obj.elemToTestFit,
		    elemToFit = obj.elemToFit,
		    i = obj.fitType.length;

		//if any of them are true, return that.
		if (typeof obj.fitType === 'function') {
			itemNoLongerFits = obj.fitType(elemToFit, elemToTestFit);
		} else {
			fitTypeLoop: while (i--) {
				fitTypeSwitch: switch (obj.fitType[i]) {

					// if a word is longer than the container
					case 'width':
						itemNoLongerFits = Math.floor(elemToFit.scrollWidth) > Math.floor(elemToFit.offsetWidth) + 1;
						break fitTypeSwitch;

					//if there is an explicit max height
					case 'maxHeight':
						if (typeof obj.maxHeight === 'undefined') {
							console.error('If you have a type of maxHeight you need to specify a max height in the options.');
						}
						itemNoLongerFits = elemToFit.offsetHeight > obj.maxHeight;
						break fitTypeSwitch;

					// default is 'height': if the fit element is taller than the test element.
					case 'height':
						itemNoLongerFits = elemToFit.offsetHeight > elemToTestFit.offsetHeight;
						break fitTypeSwitch;

					default:
						break fitTypeSwitch;
				}
				if (itemNoLongerFits) {
					break fitTypeLoop;
				}
			}
		}

		// a true means that the item no longer fits
		return itemNoLongerFits;
	},
	addClass: function addClass(obj) {
		var sizeClass = obj.sizeClasses[obj.index],
		    elemIndex = obj.elemsToAddClassTo.length;
		if (obj.mf.testNotFit()) {
			obj.mf.removeClasses();
			while (elemIndex--) {
				obj.elemsToAddClassTo[elemIndex].classList.add(sizeClass);
			}
			if (obj.index + 1 < obj.sizeClasses.length) {
				obj.mf.addClass(obj.index + 1);
			}
		}
	}
};

exports.default = makeFit;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _siteNavigation = __webpack_require__(0);

function initMainPolyfills() {
    (0, _siteNavigation.attachListeners)();
}

initMainPolyfills();

/***/ })
/******/ ]);